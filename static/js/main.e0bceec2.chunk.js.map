{"version":3,"sources":["Option.js","OptionBar.js","App.js","reportWebVitals.js","index.js"],"names":["Option","className","to","this","props","link","text","React","Component","OptionBar","elements","i","options","length","push","href","links","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAgBeA,G,mLANP,OACI,qBAAKC,UAAU,SAASC,GAAIC,KAAKC,MAAMC,KAAvC,SAA8CF,KAAKC,MAAME,W,GALhDC,IAAMC,YCgBZC,E,uKAZP,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAAIR,KAAKC,MAAMQ,QAAQC,OAAQF,IAC3CD,EAASI,KAAK,mBAAGC,KAAMZ,KAAKC,MAAMY,MAAML,GAA1B,SAA8B,cAAC,EAAD,CAAQL,KAAMH,KAAKC,MAAMQ,QAAQD,QAGjF,OACI,qBAAKV,UAAU,aAAf,SACKS,Q,GAVOH,IAAMC,WCqBfS,MAxBf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,MAAf,kBAGA,qBAAKA,UAAU,cAEjB,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,OAAf,6BAKJ,cAAC,EAAD,CAAWA,UAAU,aAAaW,QAAS,CAAC,eAAgB,aAAc,WAAY,SAAU,cAAeI,MAAO,CAAC,cAAc,cAAc,cAAc,cAAc,uBCTxKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0bceec2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useHistory } from 'react-router-dom';\n\nimport './Option.css'\n\nclass Option extends React.Component {\n\n\n    render() {\n        return(\n            <div className='button' to={this.props.link}>{this.props.text}</div>\n        );\n    }\n}\n\nexport default Option;","import './OptionBar.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Option from './Option.js'\nimport { render } from 'react-dom';\n\nclass OptionBar extends React.Component {\n\n    render() {\n        const elements = [];\n        for (var i = 0; i < this.props.options.length; i++) {\n            elements.push(<a href={this.props.links[i]}><Option text={this.props.options[i]}></Option></a>);\n        }\n\n        return(\n            <div className='option-bar'>\n                {elements}\n            </div>\n        );\n    }\n}\n\nexport default OptionBar;","import './App.css';\nimport OptionBar from './OptionBar.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='main-col'>\n          <div className='main-text-top-row'>\n            <div className='hey'>\n              Hey,\n            </div>\n            <div className='spacer'></div>\n          </div>\n          <div className='main-text-bottom-row'>\n            <div className='spacer'></div>\n            <div className='vlad'>\n              I'm Vlad!\n            </div>\n          </div>\n        </div>\n        <OptionBar className='option-bar' options={['Introduction', 'Experience', 'Projects', 'Skills', 'Contact Me']} links={['/experience','/experience','/experience','/experience','/experience']}></OptionBar>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport Option from './Option.js'\nimport reportWebVitals from './reportWebVitals';\nimport OptionBar from './OptionBar';\n\nvar element = React.createElement('h1', {className: 'greeting'}, 'Vlad learns frontend!');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}